DataParallel (
  (module): cascadeNet (
    (base_model): DataParallel (
      (module): Net (
        (encoder): Encoder (
          (initial_block): DownsamplerBlock (
            (conv): Conv2d(3, 13, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
            (pool): MaxPool2d (size=(2, 2), stride=(2, 2), dilation=(1, 1))
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          )
          (layers): ModuleList (
            (0): DownsamplerBlock (
              (conv): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
              (pool): MaxPool2d (size=(2, 2), stride=(2, 2), dilation=(1, 1))
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            )
            (1): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (2): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (3): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (4): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (5): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (6): DownsamplerBlock (
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
              (pool): MaxPool2d (size=(2, 2), stride=(2, 2), dilation=(1, 1))
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
            )
            (7): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (8): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(4, 0), dilation=(4, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 4), dilation=(1, 4))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (9): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(8, 0), dilation=(8, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 8), dilation=(1, 8))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (10): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(16, 0), dilation=(16, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 16), dilation=(1, 16))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (11): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (12): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(4, 0), dilation=(4, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 4), dilation=(1, 4))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (13): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(8, 0), dilation=(8, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 8), dilation=(1, 8))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (14): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(16, 0), dilation=(16, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 16), dilation=(1, 16))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
          )
        )
        (decoder): Decoder (
          (layers): ModuleList (
            (0): UpsamplerBlock (
              (conv): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            )
            (1): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0)
            )
            (2): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0)
            )
            (3): UpsamplerBlock (
              (conv): ConvTranspose2d(64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
            )
            (4): non_bottleneck_1d (
              (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0)
            )
            (5): non_bottleneck_1d (
              (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0)
            )
          )
          (output_conv): ConvTranspose2d(16, 20, kernel_size=(2, 2), stride=(2, 2))
        )
      )
    )
    (fine_grained_model): DataParallel (
      (module): defectSegmentationNet (
        (encoder): Encoder (
          (initial_block): DownsamplerBlock (
            (conv): Conv2d(3, 13, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
            (pool): MaxPool2d (size=(2, 2), stride=(2, 2), dilation=(1, 1))
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          )
          (layers): ModuleList (
            (0): DownsamplerBlock (
              (conv): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
              (pool): MaxPool2d (size=(2, 2), stride=(2, 2), dilation=(1, 1))
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            )
            (1): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (2): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (3): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (4): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (5): non_bottleneck_1d (
              (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.03)
            )
            (6): DownsamplerBlock (
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
              (pool): MaxPool2d (size=(2, 2), stride=(2, 2), dilation=(1, 1))
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
            )
            (7): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (8): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(4, 0), dilation=(4, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 4), dilation=(1, 4))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (9): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(8, 0), dilation=(8, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 8), dilation=(1, 8))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (10): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(16, 0), dilation=(16, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 16), dilation=(1, 16))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (11): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (12): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(4, 0), dilation=(4, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 4), dilation=(1, 4))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (13): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(8, 0), dilation=(8, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 8), dilation=(1, 8))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
            (14): non_bottleneck_1d (
              (conv3x1_1): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
              (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
              (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (conv3x1_2): Conv2d(128, 128, kernel_size=(3, 1), stride=(1, 1), padding=(16, 0), dilation=(16, 1))
              (conv1x3_2): Conv2d(128, 128, kernel_size=(1, 3), stride=(1, 1), padding=(0, 16), dilation=(1, 16))
              (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True)
              (dropout): Dropout2d (p=0.3)
            )
          )
          (output_conv): Conv2d(128, 20, kernel_size=(1, 1), stride=(1, 1))
        )
        (decoder): Sequential (
          (0): sfpBlock (
            (avg_pool1): AvgPool2d (size=64, stride=64, padding=0, ceil_mode=False, count_include_pad=True)
            (avg_pool3): AvgPool2d (size=16, stride=16, padding=0, ceil_mode=False, count_include_pad=True)
            (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.95, affine=True)
            (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.95, affine=True)
            (bn5): BatchNorm2d(128, eps=1e-05, momentum=0.95, affine=True)
            (finalconv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (1): UpsamplerBlock (
            (conv): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
          )
          (2): non_bottleneck_1d (
            (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            (dropout): Dropout2d (p=0)
          )
          (3): non_bottleneck_1d (
            (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True)
            (dropout): Dropout2d (p=0)
          )
          (4): UpsamplerBlock (
            (conv): ConvTranspose2d(64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
          )
          (5): non_bottleneck_1d (
            (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
            (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
            (dropout): Dropout2d (p=0)
          )
          (6): non_bottleneck_1d (
            (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
            (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
            (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
            (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True)
            (dropout): Dropout2d (p=0)
          )
        )
        (decoder_last_child): ConvTranspose2d(16, 20, kernel_size=(2, 2), stride=(2, 2))
        (output_conv): ConvTranspose2d(16, 10, kernel_size=(2, 2), stride=(2, 2))
      )
    )
  )
)